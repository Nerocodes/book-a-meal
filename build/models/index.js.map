{"version":3,"sources":["../../backend/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","TEST_ENV","config","__dirname","db","console","log","sequelize","use_env_variable","database","username","password","readdirSync","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAIC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAAlC;;AACA,IAAGD,OAAO,CAACD,GAAR,CAAYG,QAAf,EAAwB;AACtBH,EAAAA,GAAG,GAAG,MAAN;AACD;;AACD,IAAMI,MAAM,GAAGT,OAAO,CAACU,SAAS,GAAG,eAAb,CAAP,CAAqCL,GAArC,CAAf;;AACA,IAAMM,EAAE,GAAG,EAAX;AAEAC,OAAO,CAACC,GAAR,CAAYR,GAAZ;AAEA,IAAIS,SAAJ;;AACA,IAAIL,MAAM,CAACM,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIZ,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYI,MAAM,CAACM,gBAAnB,CAAd,EAAoDN,MAApD,CAAZ;AACD,CAFD,MAEO;AACLK,EAAAA,SAAS,GAAG,IAAIZ,SAAJ,CAAcO,MAAM,CAACO,QAArB,EAA+BP,MAAM,CAACQ,QAAtC,EAAgDR,MAAM,CAACS,QAAvD,EAAiET,MAAjE,CAAZ;AACD;;AAEDV,EAAE,CACCoB,WADH,CACeT,SADf,EAEGU,MAFH,CAEU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKlB,QAAvC,IAAqDkB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGX,SAAS,CAAC,QAAD,CAAT,CAAoBb,IAAI,CAACyB,IAAL,CAAUhB,SAAV,EAAqBW,IAArB,CAApB,CAAd;AACAV,EAAAA,EAAE,CAACc,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;AAUAG,MAAM,CAACC,IAAP,CAAYlB,EAAZ,EAAgBa,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAInB,EAAE,CAACmB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BpB,IAAAA,EAAE,CAACmB,SAAD,CAAF,CAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACG,SAAH,GAAeA,SAAf;AACAH,EAAE,CAACT,SAAH,GAAeA,SAAf;AAEA8B,MAAM,CAACC,OAAP,GAAiBtB,EAAjB","sourcesContent":["'use strict';\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst Sequelize = require('sequelize');\r\nconst basename = path.basename(__filename);\r\nlet env = process.env.NODE_ENV || 'development';\r\nif(process.env.TEST_ENV){\r\n  env = 'test';\r\n}\r\nconst config = require(__dirname + '/../config.js')[env];\r\nconst db = {};\r\n\r\nconsole.log(env);\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter(file => {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\r\n  })\r\n  .forEach(file => {\r\n    const model = sequelize['import'](path.join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nmodule.exports = db;\r\n"],"file":"index.js"}