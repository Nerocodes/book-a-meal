{"version":3,"sources":["../../backend/controllers/order.controller.js"],"names":["OrderController","fetchAllOrders","req","res","models","Order","findAll","then","orders","json","status","data","catch","err","console","log","addAnOrder","newOrder","body","create","total","getSingleOrder","id","params","findById","updateAnOrder","update","order"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,eAAe,GAAG;AAEpBC,EAAAA,cAFoB,0BAELC,GAFK,EAEAC,GAFA,EAEI;AACpBC,mBAAOC,KAAP,CAAaC,OAAb,GAAuBC,IAAvB,CAA4B,UAAAC,MAAM,EAAI;AAClC,aAAOL,GAAG,CAACM,IAAJ,CAAS;AACZC,QAAAA,MAAM,EAAE,SADI;AAEZC,QAAAA,IAAI,EAAEH;AAFM,OAAT,EAGJE,MAHI,CAGG,GAHH,CAAP;AAIH,KALD,EAMCE,KAND,CAMO,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KANV;AAOH,GAVmB;AAYpBG,EAAAA,UAZoB,sBAYTd,GAZS,EAYJC,GAZI,EAYA;AAChB;;;;;;AAOC,QAAMc,QAAQ,GAAGf,GAAG,CAACgB,IAArB;;AACAd,mBAAOC,KAAP,CAAac,MAAb,CAAoB;AACjBC,MAAAA,KAAK,EAAEH,QAAQ,CAACG;AADC,KAApB,EAEEb,IAFF,CAEO,UAAAC,MAAM,EAAI;AACf,aAAOL,GAAG,CAACM,IAAJ,CAAS;AACZC,QAAAA,MAAM,EAAE,SADI;AAEZC,QAAAA,IAAI,EAAEH;AAFM,OAAT,EAGHE,MAHG,CAGI,GAHJ,CAAP;AAIF,KAPA,EAOEE,KAPF,CAOQ,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAPX;AAQJ,GA7BmB;AA+BpBQ,EAAAA,cA/BoB,0BA+BLnB,GA/BK,EA+BAC,GA/BA,EA+BI;AACpB,QAAMmB,EAAE,GAAGpB,GAAG,CAACqB,MAAJ,CAAWD,EAAtB;;AACAlB,mBAAOC,KAAP,CAAamB,QAAb,CAAsBF,EAAtB,EAA0Bf,IAA1B,CAA+B,UAAAC,MAAM,EAAI;AACrC,aAAOL,GAAG,CAACM,IAAJ,CAAS;AACZC,QAAAA,MAAM,EAAE,SADI;AAEZC,QAAAA,IAAI,EAAEH;AAFM,OAAT,EAGHE,MAHG,CAGI,GAHJ,CAAP;AAIH,KALD,EAKGE,KALH,CAKS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KALZ;AAMH,GAvCmB;AAyCpBY,EAAAA,aAzCoB,yBAyCNvB,GAzCM,EAyCDC,GAzCC,EAyCG;AACnB,QAAMmB,EAAE,GAAGpB,GAAG,CAACqB,MAAJ,CAAWD,EAAtB;AACA,QAAML,QAAQ,GAAGf,GAAG,CAACgB,IAArB;;AACAd,mBAAOC,KAAP,CAAamB,QAAb,CAAsBF,EAAtB,EAA0Bf,IAA1B,CAA+B,UAAAC,MAAM,EAAI;AACrCA,MAAAA,MAAM,CAACkB,MAAP,CAAc;AACVN,QAAAA,KAAK,EAAEH,QAAQ,CAACG;AADN,OAAd,EAEGb,IAFH,CAEQ,UAAAoB,KAAK,EAAI;AACb,eAAOxB,GAAG,CAACM,IAAJ,CAAS;AACZC,UAAAA,MAAM,EAAE,SADI;AAEZC,UAAAA,IAAI,EAAEgB;AAFM,SAAT,EAGHjB,MAHG,CAGI,GAHJ,CAAP;AAIH,OAPD;AAQH,KATD,EASGE,KATH,CASS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KATZ;AAUH;AAtDmB,CAAxB;eA0Deb,e","sourcesContent":["import models from '../models/index';\r\n\r\nconst OrderController = {\r\n\r\n    fetchAllOrders(req, res){\r\n        models.Order.findAll().then(orders => {\r\n            return res.json({\r\n                status: 'success',\r\n                data: orders\r\n            }).status(200);\r\n        })\r\n        .catch(err => console.log(err));\r\n    },\r\n\r\n    addAnOrder(req, res){\r\n        /*\r\n            Expect json of format\r\n            {\r\n                total: number\r\n            }\r\n         */\r\n\r\n         const newOrder = req.body;\r\n         models.Order.create({\r\n            total: newOrder.total\r\n        }).then(orders => {\r\n           return res.json({\r\n               status: 'success',\r\n               data: orders\r\n            }).status(201);\r\n        }).catch(err => console.log(err));\r\n    },\r\n\r\n    getSingleOrder(req, res){\r\n        const id = req.params.id;\r\n        models.Order.findById(id).then(orders => {\r\n            return res.json({\r\n                status: 'success',\r\n                data: orders\r\n             }).status(200);\r\n        }).catch(err => console.log(err));\r\n    },\r\n\r\n    updateAnOrder(req, res){\r\n        const id = req.params.id;\r\n        const newOrder = req.body;\r\n        models.Order.findById(id).then(orders => {\r\n            orders.update({\r\n                total: newOrder.total\r\n            }).then(order => {\r\n                return res.json({\r\n                    status: 'success',\r\n                    data: order\r\n                 }).status(201);\r\n            });\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n}\r\n\r\nexport default OrderController;"],"file":"order.controller.js"}