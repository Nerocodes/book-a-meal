{"version":3,"sources":["../../backend/controllers/user.controller.js"],"names":["UserController","fetchAllUsers","req","res","models","User","findAll","then","users","json","status","data","catch","err","console","log","addAUser","newUser","body","create","first_name","last_name","email","password","getSingleUser","id","params","findById","updateAUser","update","user","deleteAUser","destroy"],"mappings":"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","sourcesContent":["import models from '../models/index';\r\n\r\nconst UserController = {\r\n\r\n    fetchAllUsers(req, res){\r\n        models.User.findAll().then(users => {\r\n            return res.json({\r\n                status: 'success',\r\n                data: users\r\n            }).status(200);\r\n        })\r\n        .catch(err => console.log(err));\r\n    },\r\n\r\n    addAUser(req, res){\r\n        /*\r\n            Expect json of format\r\n            {\r\n                first_name: DataTypes.STRING,\r\n                last_name: DataTypes.STRING,\r\n                email: DataTypes.STRING,\r\n                password: DataTypes.STRING\r\n            }\r\n         */\r\n\r\n         const newUser = req.body;\r\n         models.User.create({\r\n             first_name: newUser.first_name,\r\n             last_name: newUser.last_name,\r\n             email: newUser.email,\r\n             password: newUser.password\r\n\r\n         }).then(users => {\r\n            return res.json({\r\n                status: 'success',\r\n                data: users\r\n             }).status(201);\r\n         }).catch(err => console.log(err));\r\n         \r\n    },\r\n\r\n    getSingleUser(req, res){\r\n        const id = req.params.id;\r\n        models.User.findById(id).then(users => {\r\n            return res.json({\r\n                status: 'success',\r\n                data: users\r\n             }).status(200);\r\n        }).catch(err => console.log(err));\r\n    },\r\n\r\n    updateAUser(req, res){\r\n        const id = req.params.id;\r\n        const newUser = req.body;\r\n        models.User.findById(id).then(users => {\r\n            users.update({\r\n                first_name: newUser.first_name,\r\n                last_name: newUser.last_name,\r\n                email: newUser.email,\r\n                password: newUser.password\r\n            }).then(user => {\r\n                return res.json({\r\n                    status: 'success',\r\n                    data: user\r\n                 }).status(201);\r\n            });\r\n        }).catch(err => console.log(err));\r\n    },\r\n\r\n    deleteAUser(req, res){\r\n        const id = req.params.id;\r\n        models.User.findById(id).then(users => {\r\n            users.destroy().then(() => {\r\n                return res.json({\r\n                    status: 'success',\r\n                    data: 'Deleted Successfully'\r\n                 }).status(201);\r\n            });\r\n        }).catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport default UserController;"],"file":"user.controller.js"}