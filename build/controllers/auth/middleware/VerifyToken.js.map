{"version":3,"sources":["../../../../backend/controllers/auth/middleware/VerifyToken.js"],"names":["verifyToken","verify","req","res","next","token","headers","status","send","auth","message","jwt","config","secret","err","decoded","userId","id"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,WAAW,GAAG;AAChBC,EAAAA,MADgB,kBACTC,GADS,EACJC,GADI,EACCC,IADD,EACO;AACnB,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CAAd;AACI,QAAI,CAACD,KAAL,EACI,OAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAArB,CAAP;;AACJC,0BAAIV,MAAJ,CAAWI,KAAX,EAAkBO,gBAAOC,MAAzB,EAAiC,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACpD,UAAID,GAAJ,EACA,OAAOX,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAArB,CAAP,CAFoD,CAGpD;;AACAR,MAAAA,GAAG,CAACc,MAAJ,GAAaD,OAAO,CAACE,EAArB;AACAb,MAAAA,IAAI;AACP,KAND;AAOH;AAZW,CAApB;eAiBgBJ,W;;AAAY","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport config from '../../../config';\r\n\r\nconst verifyToken = {\r\n    verify(req, res, next) {\r\n        const token = req.headers['x-access-token'];\r\n            if (!token)\r\n                return res.status(403).send({ auth: false, message: 'No token provided.' });\r\n            jwt.verify(token, config.secret, function(err, decoded) {\r\n                if (err)\r\n                return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\r\n                // if everything good, save to request for use in other routes\r\n                req.userId = decoded.id;\r\n                next();\r\n            });\r\n        }\r\n}\r\n\r\n\r\n\r\n export default verifyToken;;"],"file":"VerifyToken.js"}