{"version":3,"sources":["../../backend/controllers/meal.controller.js"],"names":["MealController","fetchAllMeals","req","res","allMeals","MealService","json","status","data","addAMeal","newMeal","body","createdMeal","addMeal","getSingleMeal","id","params","foundMeal","getAMeal","updateAMeal","updatedMeal","updateMeal","deleteAMeal","deleteMeal"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,cAAc,GAAG;AAEnBC,EAAAA,aAFmB,yBAELC,GAFK,EAEAC,GAFA,EAEI;AACnB,QAAMC,QAAQ,GAAGC,cAAYJ,aAAZ,EAAjB;;AACA,WAAOE,GAAG,CAACG,IAAJ,CAAS;AACZC,MAAAA,MAAM,EAAE,SADI;AAEZC,MAAAA,IAAI,EAAEJ;AAFM,KAAT,EAGJG,MAHI,CAGG,GAHH,CAAP;AAIH,GARkB;AAUnBE,EAAAA,QAVmB,oBAUVP,GAVU,EAULC,GAVK,EAUD;AACd;;;;;;;;AASC,QAAMO,OAAO,GAAGR,GAAG,CAACS,IAApB;;AACA,QAAMC,WAAW,GAAGP,cAAYQ,OAAZ,CAAoBH,OAApB,CAApB;;AACA,WAAOP,GAAG,CAACG,IAAJ,CAAS;AACbC,MAAAA,MAAM,EAAE,SADK;AAEbC,MAAAA,IAAI,EAAEI;AAFO,KAAT,EAGJL,MAHI,CAGG,GAHH,CAAP;AAIJ,GA1BkB;AA4BnBO,EAAAA,aA5BmB,yBA4BLZ,GA5BK,EA4BAC,GA5BA,EA4BI;AACnB,QAAMY,EAAE,GAAGb,GAAG,CAACc,MAAJ,CAAWD,EAAtB;;AACA,QAAME,SAAS,GAAGZ,cAAYa,QAAZ,CAAqBH,EAArB,CAAlB;;AACA,WAAOZ,GAAG,CAACG,IAAJ,CAAS;AACZC,MAAAA,MAAM,EAAE,SADI;AAEZC,MAAAA,IAAI,EAAES;AAFM,KAAT,EAGHV,MAHG,CAGI,GAHJ,CAAP;AAIH,GAnCkB;AAqCnBY,EAAAA,WArCmB,uBAqCPjB,GArCO,EAqCFC,GArCE,EAqCE;AACjB,QAAMY,EAAE,GAAGb,GAAG,CAACc,MAAJ,CAAWD,EAAtB;AACA,QAAML,OAAO,GAAGR,GAAG,CAACS,IAApB;;AACA,QAAMS,WAAW,GAAGf,cAAYgB,UAAZ,CAAuBX,OAAvB,EAAgCK,EAAhC,CAApB;;AACA,WAAOZ,GAAG,CAACG,IAAJ,CAAS;AACZC,MAAAA,MAAM,EAAE,SADI;AAEZC,MAAAA,IAAI,EAAEY;AAFM,KAAT,EAGHb,MAHG,CAGI,GAHJ,CAAP;AAIH,GA7CkB;AA+CnBe,EAAAA,WA/CmB,uBA+CPpB,GA/CO,EA+CFC,GA/CE,EA+CE;AACjB,QAAMY,EAAE,GAAGb,GAAG,CAACc,MAAJ,CAAWD,EAAtB;;AACA,QAAMQ,UAAU,GAAGlB,cAAYkB,UAAZ,CAAuBR,EAAvB,CAAnB;;AACA,WAAOZ,GAAG,CAACG,IAAJ,CAAS;AACZC,MAAAA,MAAM,EAAE,SADI;AAEZC,MAAAA,IAAI,EAAEe;AAFM,KAAT,EAGHhB,MAHG,CAGI,GAHJ,CAAP;AAIH;AAtDkB,CAAvB;eA0DeP,c","sourcesContent":["import MealService from '../services/meal.service';\r\n\r\nconst MealController = {\r\n\r\n    fetchAllMeals(req, res){\r\n        const allMeals = MealService.fetchAllMeals();\r\n        return res.json({\r\n            status: 'success',\r\n            data: allMeals\r\n        }).status(200);\r\n    },\r\n\r\n    addAMeal(req, res){\r\n        /*\r\n            Expect json of format\r\n            {\r\n                name: \"random\",\r\n                description: \"random\",\r\n                price: 300\r\n            }\r\n         */\r\n\r\n         const newMeal = req.body;\r\n         const createdMeal = MealService.addMeal(newMeal);\r\n         return res.json({\r\n            status: 'success',\r\n            data: createdMeal\r\n         }).status(201);\r\n    },\r\n\r\n    getSingleMeal(req, res){\r\n        const id = req.params.id;\r\n        const foundMeal = MealService.getAMeal(id);\r\n        return res.json({\r\n            status: 'success',\r\n            data: foundMeal\r\n         }).status(200);\r\n    },\r\n\r\n    updateAMeal(req, res){\r\n        const id = req.params.id;\r\n        const newMeal = req.body;\r\n        const updatedMeal = MealService.updateMeal(newMeal, id);\r\n        return res.json({\r\n            status: 'success',\r\n            data: updatedMeal\r\n         }).status(201);\r\n    },\r\n\r\n    deleteAMeal(req, res){\r\n        const id = req.params.id;\r\n        const deleteMeal = MealService.deleteMeal(id);\r\n        return res.json({\r\n            status: 'success',\r\n            data: deleteMeal\r\n         }).status(201);\r\n    }\r\n\r\n}\r\n\r\nexport default MealController;"],"file":"meal.controller.js"}